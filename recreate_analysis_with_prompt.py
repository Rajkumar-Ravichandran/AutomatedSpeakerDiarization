Prompt: "Generate a Python script that implements an automated speaker diarization and identification pipeline. The code should: Transcribe Audio: Use the Whisper model (via the faster-whisper package) to convert audio files to text, segmenting the speech. Extract Speaker Embeddings: Process each segment using SpeechBrainâ€™s ECAPA-TDNN model to extract speaker features. Cluster Embeddings: Apply K-Means clustering to group similar segments based on their speaker embeddings. Speaker Identification: Compare the cluster averages to embeddings of known speakers using cosine similarity, assigning a label if the similarity exceeds a configurable threshold. Analysis: Analyze and compare results between clean and noisy audio samples, including metrics like similarity scores, segment counts, and duration changes. Include helper functions (e.g., for time conversion and error handling) and detailed printouts of intermediate steps. Organize the code into clear, commented sections: setup, helper functions, model loading, pipeline execution, and result analysis. Assume required libraries (such as numpy, pandas, librosa, torch, speechbrain, faster-whisper, pyannote.audio, scikit-learn, etc.) are already installed. 

Task : Write Python code for this prompt
